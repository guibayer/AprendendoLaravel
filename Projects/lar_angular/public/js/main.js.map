{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/post-dialog/post-dialog.component.css","webpack:///./src/app/post-dialog/post-dialog.component.html","webpack:///./src/app/post-dialog/post-dialog.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/post.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".float-button{\\r\\n    position:fixed;\\r\\n    bottom:40px;\\r\\n    right:40px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsV0FBVztJQUNYLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZsb2F0LWJ1dHRvbntcclxuICAgIHBvc2l0aW9uOmZpeGVkO1xyXG4gICAgYm90dG9tOjQwcHg7XHJcbiAgICByaWdodDo0MHB4O1xyXG59Il19 */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span>Projeto: Laravel + Angular</span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-divider></mat-divider>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between stretch\\\" >\\r\\n    <app-post *ngFor=\\\"let p of posts\\\" [post]=\\\"p\\\"></app-post>\\r\\n</div>\\r\\n<button mat-fab color=\\\"primary\\\" class=\\\"float-button\\\" (click)=\\\"openDialog()\\\">\\r\\n    <mat-icon>add</mat-icon>\\r\\n</button>\""," import { Component } from '@angular/core';\n import {Post} from \"./post\";\n import {MatDialog} from \"@angular/material\";\n import {PostDialogComponent} from \"./post-dialog/post-dialog.component\";\n import {PostService} from \"./post.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'meuapp';\n  private posts: Post[];\n\n  constructor(\n      public dialog: MatDialog,\n      public postService: PostService\n  ){}\n\n  ngOnInit(){\n      this.posts = this.postService.posts;\n  }\n\n  openDialog(){\n      const dialogRef = this.dialog.open(PostDialogComponent,{\n          width:'600px'})\n      dialogRef.afterClosed().subscribe(\n          (result) => {\n              if(result){\n                  this.postService.salvar(result.post, result.arquivo);\n              }\n          }\n      );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule, MatDialog } from '@angular/material';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport {PostService} from \"./post.service\";\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PostComponent,\n        PostDialogComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FlexLayoutModule,\n        HttpClientModule,\n\n        MatButtonModule,\n        MatInputModule,\n        MatSelectModule,\n        MatIconModule,\n        MatToolbarModule,\n        MatCardModule,\n        MatDividerModule,\n        MatDialogModule,\n        MatChipsModule,\n        MatBadgeModule,\n\n    ],\n    providers: [\n        PostService\n    ],\n\n    entryComponents:[\n        PostDialogComponent\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QtZGlhbG9nL3Bvc3QtZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around left\\\" >\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <mat-form-field fxFlex=\\\"50\\\">\\n            <input matInput placeholder=\\\"Seu nome\\\" [(ngModel)] = \\\"dados.post.nome\\\">\\n            <mat-hint>Digite aqui seu nome</mat-hint>\\n        </mat-form-field>\\n        <mat-form-field fxFlex=\\\"40\\\">\\n            <input matInput placeholder=\\\"Seu e-mail\\\" [(ngModel)] = \\\"dados.post.email\\\">\\n            <mat-hint>Digite aqui seu email</mat-hint>\\n        </mat-form-field>\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <mat-form-field fxFlex=\\\"50\\\">\\n            <input matInput placeholder=\\\"Titulo da mensagem\\\" [(ngModel)] = \\\"dados.post.titulo\\\">\\n        </mat-form-field>\\n        <mat-form-field fxFlex=\\\"40\\\">\\n            <input matInput placeholder=\\\"Sub-Titulo da mensagem\\\" [(ngModel)] = \\\"dados.post.subtitulo\\\">\\n        </mat-form-field>\\n    </div>\\n    <mat-form-field>\\n        <textarea matInput placeholder=\\\"Deixe aqui sua mensagem\\\" [(ngModel)] = \\\"dados.post.mensagem\\\"></textarea>\\n    </mat-form-field>\\n\\n    <input type=\\\"file\\\" style=\\\"display: none\\\" #fileinput (change)=\\\"mudouArquivo($event)\\\">\\n\\n    <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"fileinput.click()\\\">\\n        <mat-icon>add_a_photo</mat-icon>\\n        Adicionar uma Foto\\n    </button>\\n\\n    <p *ngIf=\\\"nomearquivo!=''\\\">\\n        <strong>Arquivo: </strong>{{nomearquivo}}\\n        <mat-icon color=\\\"primary\\\">done</mat-icon>\\n    </p>\\n\\n    <br><br>\\n\\n    <div style=\\\"text-align:center\\\">\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"salvar()\\\">Enviar</button>\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"cancelar()\\\">Cancelar</button>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {MatDialogRef} from \"@angular/material\";\nimport {Post} from \"../post\";\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  private nomearquivo:string = '';\n\n  private dados = {\n      post: new Post(\"\",\"\",\"\",\"\",\"\",\"\"),\n      arquivo: null\n  };\n\n  constructor(\n      public dialogref: MatDialogRef<PostDialogComponent>\n  ) { }\n\n  ngOnInit() {\n  }\n\n  mudouArquivo(event){\n      this.nomearquivo = event.target.files[0].name;\n      this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n\n  cancelar(){\n    this.dialogref.close(null);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpEvent, HttpEventType} from \"@angular/common/http\";\nimport {Post} from \"./post\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n    public posts: Post[] = [];\n\n  constructor(private http: HttpClient) {\n    this.http.get('/api/').subscribe(\n        (posts: any[]) => {\n          for(let p of posts) {\n            //não esquecer do this para referenciar o atributo da classe e não o posts criado nessa função!\n            this.posts.push(\n                new Post(\n                    p.nome,\n                    p.titulo,\n                    p.subtitulo,\n                    p.email,\n                    p.mensagem,\n                    p.arquivo,\n                    p.id,\n                    p.likes,\n                    )\n            );\n          }\n        }\n    );\n  }\n\n  salvar(post: Post, file: File){\n    const uploadData = new FormData();\n    uploadData.append('nome', post.nome);\n    uploadData.append('email', post.email);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file, file.name);\n\n    this.http.post('/api/', uploadData,\n        {reportProgress: true, observe: 'events'}).subscribe(\n        (event: HttpEvent<any>) => {\n          if(event.type == HttpEventType.Response){\n              console.log(event);\n              let p: any = event.body;\n              this.posts.push(\n                  new Post(\n                      p.nome,\n                      p.titulo,\n                      p.subtitulo,\n                      p.email,\n                      p.mensagem,\n                      p.arquivo,\n                      p.id,\n                      p.likes,\n                  )\n              );\n          }\n         if(event.type == HttpEventType.UploadProgress){\n              console.log('UploadProgress');\n              console.log(event);\n          }\n        }\n    );\n  }\n\n  like(id: number){\n      this.http.get('/api/like/' + id).subscribe(\n      (event: any) =>{\n            let p = this.posts.find((p) => p.id == id);\n            p.likes = event.likes;\n      }\n      );\n  }\n\n    apagar(id: number){\n        this.http.delete('/api/delete/' + id).subscribe((event)=>{\n            console.log(event);\n            let i = this.posts.findIndex((p) => p.id == id);\n            if(i >= 0){\n                this.posts.splice(i, 1);\n            }\n        });\n    }\n\n}\n","export class Post {\r\n    constructor(\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number,\r\n    ){    }\r\n}","module.exports = \".card{\\r\\n    max-width: 300px;\\r\\n    margin: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC9wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvcG9zdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmR7XHJcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59Il19 */\"","module.exports = \"<mat-card fxFlex class=\\\"card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar></div>\\n    <mat-card-title>{{ post.titulo }}</mat-card-title>\\n    <mat-card-subtitle>{{ post.titulo }}</mat-card-subtitle>\\n  </mat-card-header>\\n  <img mat-card-image src=\\\"/storage/{{post.arquivo}}\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n  <mat-card-content>\\n    <p>\\n      {{ post.mensagem }}\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"like()\\\">LIKE</button>\\n    <button mat-button color=\\\"accent\\\" (click)=\\\"apagar()\\\">DELETE</button>\\n    <mat-icon color=\\\"warn\\\" *ngIf=\\\"post.likes>0\\\" [matBadge] = \\\"post.likes\\\"\\n    matBadgePosition=\\\"above after\\\" matBadgeColor=\\\"warn\\\" matBadgeOverlap=\\\"false\\\">favorite</mat-icon>\\n  </mat-card-actions>\\n</mat-card>\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Post} from \"../post\";\nimport {PostService} from \"../post.service\";\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post:Post;\n  constructor(\n      private postService: PostService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  like(){\n    this.postService.like(this.post.id);\n  }\n\n  apagar(){\n    this.postService.apagar(this.post.id);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}